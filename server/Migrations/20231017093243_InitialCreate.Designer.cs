// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UHR.Data;

#nullable disable

namespace UHR.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231017093243_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UHR.Models.Cargo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("weight")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("UHR.Models.Destination", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<float>("current_latitude")
                        .HasColumnType("real");

                    b.Property<float>("current_longitude")
                        .HasColumnType("real");

                    b.Property<string>("destination_city")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("destination_latitude")
                        .HasColumnType("real");

                    b.Property<float>("destination_longitude")
                        .HasColumnType("real");

                    b.Property<string>("origin_city")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("origin_latitude")
                        .HasColumnType("real");

                    b.Property<float>("origin_longitude")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("UHR.Models.Passenger", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("middleName")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ticketid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("ticketid");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("UHR.Models.Route", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<int?>("Trainid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("arrival_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("departure_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("destinationid")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Trainid");

                    b.HasIndex("destinationid");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("UHR.Models.Seat", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("number")
                        .HasColumnType("integer");

                    b.Property<bool>("reserved")
                        .HasColumnType("boolean");

                    b.Property<int>("wagonid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("wagonid");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("UHR.Models.Ticket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<int>("seatid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("seatid");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("UHR.Models.Train", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("typeid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("typeid");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("UHR.Models.TrainType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("TrainTypes");
                });

            modelBuilder.Entity("UHR.Models.Wagon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Cargoid")
                        .HasColumnType("integer");

                    b.Property<int>("number")
                        .HasColumnType("integer");

                    b.Property<int>("trainid")
                        .HasColumnType("integer");

                    b.Property<int>("typeid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Cargoid");

                    b.HasIndex("trainid");

                    b.HasIndex("typeid");

                    b.ToTable("Wagons");
                });

            modelBuilder.Entity("UHR.Models.WagonType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("WagonTypes");
                });

            modelBuilder.Entity("UHR.Models.Passenger", b =>
                {
                    b.HasOne("UHR.Models.Ticket", "ticket")
                        .WithMany()
                        .HasForeignKey("ticketid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ticket");
                });

            modelBuilder.Entity("UHR.Models.Route", b =>
                {
                    b.HasOne("UHR.Models.Train", null)
                        .WithMany("routes")
                        .HasForeignKey("Trainid");

                    b.HasOne("UHR.Models.Destination", "destination")
                        .WithMany()
                        .HasForeignKey("destinationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("destination");
                });

            modelBuilder.Entity("UHR.Models.Seat", b =>
                {
                    b.HasOne("UHR.Models.Wagon", "wagon")
                        .WithMany()
                        .HasForeignKey("wagonid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("wagon");
                });

            modelBuilder.Entity("UHR.Models.Ticket", b =>
                {
                    b.HasOne("UHR.Models.Seat", "seat")
                        .WithMany()
                        .HasForeignKey("seatid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("seat");
                });

            modelBuilder.Entity("UHR.Models.Train", b =>
                {
                    b.HasOne("UHR.Models.TrainType", "type")
                        .WithMany()
                        .HasForeignKey("typeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("type");
                });

            modelBuilder.Entity("UHR.Models.Wagon", b =>
                {
                    b.HasOne("UHR.Models.Cargo", null)
                        .WithMany("wagons")
                        .HasForeignKey("Cargoid");

                    b.HasOne("UHR.Models.Train", "train")
                        .WithMany()
                        .HasForeignKey("trainid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UHR.Models.WagonType", "type")
                        .WithMany()
                        .HasForeignKey("typeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("train");

                    b.Navigation("type");
                });

            modelBuilder.Entity("UHR.Models.Cargo", b =>
                {
                    b.Navigation("wagons");
                });

            modelBuilder.Entity("UHR.Models.Train", b =>
                {
                    b.Navigation("routes");
                });
#pragma warning restore 612, 618
        }
    }
}
